{"version":3,"sources":["pics/Background.jpg","identifier/identifier.js","Components/Home.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["identify","weather_desc","icon","message","Home","state","weather","props","name","filter","F","current","weather_descriptions","length","this","Fragment","src","require","default","alt","className","Moment","format","temperature","weather_icons","location","HandleMessage","Component","Nav","App","weatherData","observation_time","axios","get","then","data","city","setState","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08f9f92a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Background.f41d5410.jpg\";","const identify = [\r\n    {weather_desc : \"Sunny\" , icon : \"../pics/svg/wi-day-sunny.svg\" , message : \"I would like to tell you that the sun will come out, but it might not. I'm no miracle worker\"},\r\n    {weather_desc : \"Cloudy\" , icon : \"../pics/svg/wi-cloudy.svg\", message : \"I love Cloudy and cold weather. Just like today !\"},\r\n    {weather_desc : \"Day Cloudy\" , icon : \"../pics/svg/wi-day-cloudy.svg\", message : \"\"},\r\n    {weather_desc : \"Foggy\" , icon : \"../pics/svg/wi-fog.svg\", message : \"A dawn with foggy weather. Do not mess with your day unless you allow it\"},\r\n    {weather_desc : \"Windy\" , icon : \"../pics/svg/wi-windy.svg\", message : \"I love Cloudy and Windy weather, Just like today!\"},\r\n    {weather_desc : \"Light Rain\" , icon : \"../pics/svg/wi-day-showers.svg\", message : \"Without rain, there is no life. Looks like you have a life today! \"},\r\n    {weather_desc : \"Overcast\" , icon : \"../pics/svg/\", message : \"\"},\r\n    {weather_desc : \"Overcast\" , icon : \"../pics/svg/\", message : \"\"},\r\n    {weather_desc : \"Overcast\" , icon : \"../pics/svg/\", message : \"\"},\r\n    {weather_desc : \"Overcast\" , icon : \"../pics/svg/\", message : \"\"},\r\n    {weather_desc : \"Overcast\" , icon : \"../pics/svg/\", message : \"\"},\r\n    {weather_desc : \"Overcast\" , icon : \"../pics/svg/\", message : \"\"},\r\n    {weather_desc : \"Overcast\" , icon : \"../pics/svg/\", message : \"\"},\r\n    {weather_desc : \"Overcast\" , icon : \"../pics/svg/\", message : \"\"},\r\n    {weather_desc : \"Overcast\" , icon : \"../pics/svg/\", message : \"\"},\r\n]\r\n//TODO make the data full\r\n\r\n\r\nexport default identify\r\n  \r\n","import React, { Component } from 'react'\r\nimport \"../css/Home.css\"\r\nimport Moment from \"moment\"\r\nimport identify from './../identifier/identifier';\r\n\r\nclass Home extends Component {\r\n   state = {\r\n      weather : this.props.weather\r\n   }\r\n\r\n   HandleMessage() {\r\n      //handle the message at .message\r\n      const name = identify.filter(F => F.weather_desc == this.state.weather.current.weather_descriptions)\r\n      return (name.length === 0 ? `I got nothing to say, but the weather will be kinda ${this.state.weather.current.weather_descriptions}` : name[0].message)\r\n      \r\n   }\r\n\r\n   render() {\r\n         const {weather} = this.state\r\n      return (\r\n        <React.Fragment>\r\n          <img\r\n            src={require(\"../pics/Background.jpg\").default}\r\n            alt=\"\"\r\n            className=\"background\"\r\n          />\r\n          <div className=\"Section\">\r\n            <div className=\"weather-card\">\r\n              <div className=\"top-section\">\r\n                <div className=\"Date-and-Time\">\r\n                  <p className=\"Date\">{Moment().format(\"Do MMMM YYYY\")}</p>\r\n                  <div className=\"Date-underscore\"></div>\r\n                  <p className=\"temperature\">\r\n                    {weather.current.temperature} Â°\r\n                  </p>\r\n                  <div className=\"desc\">\r\n                    <p>{weather.current.weather_descriptions}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"iCon\">\r\n                  <img src={weather.current.weather_icons} alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"bottom-section\">\r\n                <p className=\"earth\">\r\n                  {weather.location.name}, Earth\r\n                </p>\r\n                <h4>We are living in the middle of nowhere .</h4>\r\n                <p className=\"message\">\r\n                  {this.HandleMessage()}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n//TODO add observation time\r\n//TODO add more responsiveness\r\n//Todo BOOST PERFORMACE    \r\n//TODO make the image more flexible","import './App.css';\nimport React, { Component } from 'react';\nimport Home from \"./Components/Home\"\nimport {BrowserRouter as Router , Route} from \"react-router-dom\"\nimport axios from \"axios\"\nimport \"./css/responsive.css\"\n\nclass App extends Component {\n  state = { weatherData: { location: { name: \"----\", }, current: { observation_time: \"07:16 AM\", temperature: \"---\", weather_icons: [ \"https://assets.weatherstack.com/images/wsymbols01_png_64/wsymbol_0003_white_cloud.png\", ], weather_descriptions: \"\", }, }, };\n\n  componentDidMount() {\n    let location = axios.get(\"https://ipgeolocation.abstractapi.com/v1/?api_key=ad7b9b306bcc48d29fb4bafefdec95ed\").then((data) => {\n      axios\n      .get(\n        `http://api.weatherstack.com/current?access_key=49ec04613756acf55ec29ffdcd8556a0&query=${data.data.city}`\n      )\n      .then((data) => this.setState({weatherData : data.data}));\n  \n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Nav />\n        <Router>\n          <Route\n            path=\"\"\n            exact\n            component={(props) => (\n              <Home weather={this.state.weatherData} {...props} />\n            )}\n          />\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction Nav() {\n  return (\n    <div className=\"nav\">\n      <div className=\"logo\">ClimaFlux</div>\n    </div>\n  );\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}